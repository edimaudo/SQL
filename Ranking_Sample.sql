WITH GETBASES AS
(
SELECT
'LABEL' AS TEST,
DIVISION_NM,
CATEGORY_NM,
SKU_A_NM,
(CASE WHEN D_WK = 50 THEN POS ELSE 0 END) AS DTOTPOS,
(CASE WHEN D_WK BETWEEN 46 AND 49 THEN POS ELSE 0 END) AS PTOTPOS,
(CASE WHEN D_WK = 50 THEN TOTVIEWS ELSE 0 END) AS DTOTVIEW,
(CASE WHEN D_WK BETWEEN 46 AND 49 THEN TOTVIEWS ELSE 0 END) AS PTOTVIEW

FROM
EDWPRDBW..POS
)
,

GETRANK AS
(
SELECT
BASEAVG.TEST,
BASEAVG.DIVISION_NM,
BASEAVG.CATEGORY_NM,
BASEAVG.SKU_A_NM,
SUM(BASEAVG.DTOTPOS) AS DPOS,
SUM(BASEAVG.PTOTPOS) AS PPOS,
SUM(BASEAVG.DTOTVIEW) AS DVIEW,
SUM(BASEAVG.PTOTVIEW) AS PVIEW,
(CASE WHEN SUM(BASEAVG.PTOTPOS) <> 0 THEN (SUM(BASEAVG.DTOTPOS) / SUM(BASEAVG.PTOTPOS)) ELSE 0 END) AS BASEPOS,
(CASE WHEN SUM(BASEAVG.PTOTVIEW) <> 0 THEN (SUM(BASEAVG.DTOTVIEW) / SUM(BASEAVG.PTOTVIEW)) ELSE 0 END) AS BASEVIEW,

ROW_NUMBER() OVER (PARTITION BY BASEAVG.TEST ORDER BY BASEPOS DESC) AS SALES_Order,
ROW_NUMBER() OVER (PARTITION BY BASEAVG.TEST ORDER BY BASEVIEW DESC) AS VIEWS_Order

FROM
GETBASES BASEAVG

GROUP BY
BASEAVG.TEST,
BASEAVG.DIVISION_NM,
BASEAVG.CATEGORY_NM,
BASEAVG.SKU_A_NM
)

SELECT
SALES_RANK.DIVISION_NM,
SALES_RANK.CATEGORY_NM,
SALES_RANK.SKU_A_NM,
SALES_RANK.DPOS,
SALES_RANK.PPOS,
SALES_RANK.DVIEW,
SALES_RANK.PVIEW,
SALES_RANK.BASEPOS,
SALES_RANK.BASEVIEW,
SALES_RANK.SALES_Order,
SALES_RANK.VIEWS_Order

FROM
GETRANK SALES_RANK

WHERE
SALES_RANK.SALES_Order < 1001

ORDER BY 
SALES_RANK.SALES_Order ASC
;
